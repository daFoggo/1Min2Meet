model Meeting {
  id          String      @id @default(cuid())
  title       String
  description String?
  meetingType MeetingType @default(INPERSON)
  location    String?
  note        String?

  dateType      DateType   @default(WEEKLY)
  proposedDates DateTime[]
  startTime     String
  endTime       String
  finalDate     DateTime?

  status    MeetingStatus @default(PUBLISHED)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  participants   MeetingParticipant[]
  availableSlots AvailableSlot[]
}

model MeetingParticipant {
  id             String          @id @default(cuid())
  role           ParticipantRole
  responseStatus ResponseStatus  @default(PENDING)

  userId String
  user   User   @relation(fields: [userId], references: [id])

  meetingId String
  meeting   Meeting @relation(fields: [meetingId], references: [id], onDelete: Cascade)

  @@unique([userId, meetingId])
  @@index([userId])
  @@index([meetingId])
}

model AvailableSlot {
  id        String  @id @default(cuid())
  meetingId String
  meeting   Meeting @relation(fields: [meetingId], references: [id], onDelete: Cascade)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  date      DateTime
  startTime String
  endTime   String
  timeZone  String
  status    SlotStatus @default(AVAILABLE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([meetingId])
  @@index([userId])
  @@index([date])
}
